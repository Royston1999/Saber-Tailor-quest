# Credit to darknight1050 https://github.com/darknight1050/CrashReporter/blob/master/.github/workflows/build-ndk.yml

name: Publish Release

env:
    module_id: sabertailor
    qmodName: SaberTailor

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'tag name'
        required: true
      release_msg:
        description: 'release title'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      name: Checkout
      with:
        submodules: true
        lfs: true
    
    - uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Create ndkpath.txt
      run: |
        echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
        cat ${GITHUB_WORKSPACE}/ndkpath.txt
    - name: Get QPM
      if: steps.cache-qpm.outputs.cache-hit != 'true'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: cargo-build.yml
        name: linux-qpm
        path: QPM
        repo: QuestPackageManager/QPM.CLI
        
    - name: QPM Collapse
      run: |
        chmod +x ./QPM/qpm
        ./QPM/qpm collapse
    
    - name: QPM Dependencies Cache
      id: cache-qpm-deps
      uses: actions/cache@v2
      env:
        cache-name: cache-qpm-deps
      with:
        path: /home/runner/.local/share/QPM/cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('qpm.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: QPM Restore
      run: |
        ./QPM/qpm restore
    - name: List Post Restore
      run: |
        echo includes:
        ls -la ${GITHUB_WORKSPACE}/extern/includes
        echo libs:
        ls -la ${GITHUB_WORKSPACE}/extern/libs
        echo cache:
        ls -la $HOME/.local/share/QPM-RS/cache
        
    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}
        ./QPM/qpm qmod build
        pwsh -Command ./build.ps1
    - name: Create Qmod
      run: |
        pwsh -Command ./buildQMOD.ps1 ${{ env.qmodName }}_${{ github.event.inputs.version }}
    - name: Get Library Name
      id: libname
      run: |
        cd ./build/
        pattern="lib${module_id}*.so"
        files=( $pattern )
        echo ::set-output name=NAME::"${files[0]}"
    - name: Upload to Release
      id: upload_file_release
      uses: softprops/action-gh-release@v0.1.12
      with:
        draft: true
        name: ${{ github.event.inputs.release_msg }}
        tag_name: ${{ github.event.inputs.version }}
        files: |
          ./build/${{ steps.libname.outputs.NAME }}
          ./${{ env.qmodName }}_${{ github.event.inputs.version }}.qmod
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
